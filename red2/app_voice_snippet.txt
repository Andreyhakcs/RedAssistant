
# фрагмент для red2/app.py — создание TTS с учётом prefs['tts_voice']

def _make_tts_from_prefs(prefs):
    rate = int(prefs.get("tts_rate",175))
    vol  = float(prefs.get("tts_volume",0.9))
    voice = prefs.get("tts_voice","") or None
    from .core import tts
    # совместимость с разными версиями tts.TTS
    try:
        return tts.TTS(rate=rate, volume=vol, voice=voice)
    except TypeError:
        t = tts.TTS(rate=rate, volume=vol)
        try:
            if voice and hasattr(t, "set_voice"):
                t.set_voice(voice)
        except Exception:
            pass
        return t

# В твоём конструкторе MainWindow замени создание:
#   self.tts = tts.TTS(rate=int(self.prefs.get("tts_rate",175)), volume=float(self.prefs.get("tts_volume",0.9)))
# на:
#   self.tts = _make_tts_from_prefs(self.prefs)
#
# И в apply_prefs(...) — тоже:
#   self.tts = _make_tts_from_prefs(self.prefs)
